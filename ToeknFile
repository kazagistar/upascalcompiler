MP_PROGRAM           1     1    program
MP_IDENTIFIER        1     9    Program3
MP_SCOLON            1     17   ;
MP_VAR               2     3    var
MP_IDENTIFIER        2     7    A
MP_COLON             2     9    :
MP_INTEGER           2     11   integer
MP_SCOLON            2     18   ;
MP_IDENTIFIER        3     7    B
MP_COLON             3     9    :
MP_FLOAT             3     11   float
MP_SCOLON            3     16   ;
MP_IDENTIFIER        4     7    C
MP_COLON             4     9    :
MP_INTEGER           4     11   integer
MP_SCOLON            4     18   ;
MP_BEGIN             5     4    begin
MP_WRITE             6     6    Write
MP_LPAREN            6     11   (
MP_STRING_LIT        6     12   Enter an integer for A: 
MP_RPAREN            6     38   )
MP_SCOLON            6     39   ;
MP_READ              7     6    Read
MP_LPAREN            7     10   (
MP_IDENTIFIER        7     11   A
MP_RPAREN            7     12   )
MP_SCOLON            7     13   ;
MP_WRITELN           8     6    Writeln
MP_LPAREN            8     14   (
MP_STRING_LIT        8     15   A = 
MP_COMMA             8     21   ,
MP_IDENTIFIER        8     23   A
MP_RPAREN            8     24   )
MP_SCOLON            8     25   ;
MP_WRITE             9     6    Write
MP_LPAREN            9     11   (
MP_STRING_LIT        9     12   Enter a float for B: 
MP_RPAREN            9     35   )
MP_SCOLON            9     36   ;
MP_READ              10    6    Read
MP_LPAREN            10    10   (
MP_IDENTIFIER        10    11   B
MP_RPAREN            10    12   )
MP_SCOLON            10    13   ;
MP_WRITELN           11    6    Writeln
MP_LPAREN            11    13   (
MP_STRING_LIT        11    14   B = 
MP_COMMA             11    20   ,
MP_IDENTIFIER        11    22   B
MP_RPAREN            11    23   )
MP_SCOLON            11    24   ;
MP_WRITE             12    6    Write
MP_LPAREN            12    11   (
MP_STRING_LIT        12    12   Enter an integer for C: 
MP_RPAREN            12    38   )
MP_SCOLON            12    39   ;
MP_READ              13    6    Read
MP_LPAREN            13    10   (
MP_IDENTIFIER        13    11   C
MP_RPAREN            13    12   )
MP_SCOLON            13    13   ;
MP_WRITELN           14    6    Writeln
MP_LPAREN            14    13   (
MP_STRING_LIT        14    14   C = 
MP_COMMA             14    20   ,
MP_IDENTIFIER        14    22   C
MP_RPAREN            14    23   )
MP_SCOLON            14    24   ;
MP_IDENTIFIER        15    6    A
MP_ASSIGN            15    8    :=
MP_INTEGER_LIT       15    11   3
MP_TIMES             15    12   *
MP_IDENTIFIER        15    13   A
MP_TIMES             15    14   *
MP_IDENTIFIER        15    15   A
MP_TIMES             15    16   *
MP_IDENTIFIER        15    17   A
MP_PLUS              15    19   +
MP_INTEGER_LIT       15    21   5
MP_TIMES             15    22   *
MP_IDENTIFIER        15    23   B
MP_TIMES             15    24   *
MP_IDENTIFIER        15    25   B
MP_MINUS             15    27   -
MP_IDENTIFIER        15    29   C
MP_SCOLON            15    30   ;
MP_WRITE             16    6    Write
MP_LPAREN            16    11   (
MP_STRING_LIT        16    12   A = 
MP_COMMA             16    18   ,
MP_IDENTIFIER        16    20   A
MP_COMMA             16    21   ,
MP_STRING_LIT        16    23   , B = 
MP_COMMA             16    31   ,
MP_IDENTIFIER        16    33   B
MP_COMMA             16    34   ,
MP_STRING_LIT        16    35   , and C = 
MP_COMMA             16    47   ,
MP_IDENTIFIER        16    49   C
MP_RPAREN            16    50   )
MP_SCOLON            16    51   ;
MP_END               17    3    end
MP_PERIOD            17    6    .
MP_EOF               17    7    
MP_EOF               17    7    
