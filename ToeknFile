MP_PROGRAM           1     1    program
MP_IDENTIFIER        1     9    fizzbuzz
MP_SCOLON            1     17   ;
MP_VAR               2     1    var
MP_IDENTIFIER        3     3    i
MP_COLON             3     4    :
MP_INTEGER           3     6    integer
MP_SCOLON            3     13   ;
MP_BEGIN             4     1    begin
MP_FOR               5     3    for
MP_IDENTIFIER        5     7    i
MP_ASSIGN            5     9    :=
MP_INTEGER_LIT       5     12   1
MP_TO                5     14   to
MP_INTEGER_LIT       5     17   100
MP_DO                5     21   do
MP_IF                6     5    if
MP_IDENTIFIER        6     8    i
MP_MOD               6     10   mod
MP_INTEGER_LIT       6     14   15
MP_EQUAL             6     17   =
MP_INTEGER_LIT       6     19   0
MP_THEN              6     21   then
MP_WRITELN           7     7    writeln
MP_LPAREN            7     14   (
MP_STRING_LIT        7     15   FizzBuzz
MP_RPAREN            7     25   )
MP_ELSE              8     5    else
MP_IF                8     10   if
MP_IDENTIFIER        8     13   i
MP_MOD               8     15   mod
MP_INTEGER_LIT       8     19   3
MP_EQUAL             8     21   =
MP_INTEGER_LIT       8     23   0
MP_THEN              8     25   then
MP_WRITELN           9     7    writeln
MP_LPAREN            9     14   (
MP_STRING_LIT        9     15   Fizz
MP_RPAREN            9     21   )
MP_ELSE              10    5    else
MP_IF                10    10   if
MP_IDENTIFIER        10    13   i
MP_MOD               10    15   mod
MP_INTEGER_LIT       10    19   5
MP_EQUAL             10    21   =
MP_INTEGER_LIT       10    23   0
MP_THEN              10    25   then
MP_WRITELN           11    7    writeln
MP_LPAREN            11    14   (
MP_STRING_LIT        11    15   Buzz
MP_RPAREN            11    21   )
MP_ELSE              12    5    else
MP_WRITELN           13    7    writeln
MP_LPAREN            13    14   (
MP_IDENTIFIER        13    15   i
MP_RPAREN            13    16   )
MP_END               14    1    end
MP_PERIOD            14    4    .
MP_EOF               15    1    
MP_EOF               15    1    
